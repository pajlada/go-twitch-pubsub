---
name: Build

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  TWITCH_PUBSUB_SERVER_TAG: v1.0.7
  TWITCH_PUBSUB_SERVER_IMAGE: ghcr.io/chatterino/twitch-pubsub-server-test:$TWITCH_PUBSUB_SERVER_TAG

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go:
          - "1.19"
          - "1.20"
        os:
          - "ubuntu-22.04"
          - "ubuntu-20.04"
          - "macos-13"
          - "macos-12"

    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v4

      - name: Get Go dependencies
        run: |
          go get -v -t -d ./...

      - name: Build example
        run: go build
        working-directory: cmd/example

      - name: Download mock PubSub server
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          docker pull ${{ env.TWITCH_PUBSUB_SERVER_IMAGE }}

      - name: Download mock PubSub server
        if: startsWith(matrix.os, 'macos-')
        run: |
          mkdir pubsub-server-test
          curl -L -o pubsub-server.tar.gz "https://github.com/Chatterino/twitch-pubsub-server-test/releases/download/${{ env.TWITCH_PUBSUB_SERVER_TAG }}/server-${{ env.TWITCH_PUBSUB_SERVER_TAG }}-darwin-amd64.tar.gz"
          tar -xzf pubsub-server.tar.gz -C pubsub-server-test
          rm pubsub-server.tar.gz
          cd pubsub-server-test
          curl -L -o server.crt "https://github.com/Chatterino/twitch-pubsub-server-test/raw/${{ env.TWITCH_PUBSUB_SERVER_TAG }}/cmd/server/server.crt"
          curl -L -o server.key "https://github.com/Chatterino/twitch-pubsub-server-test/raw/${{ env.TWITCH_PUBSUB_SERVER_TAG }}/cmd/server/server.key"

      - name: Test
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          docker run --network=host --detach ${{ env.TWITCH_PUBSUB_SERVER_IMAGE }}
          go test -v ./...

      - name: Test
        if: startsWith(matrix.os, 'macos-')
        run: |
          cd pubsub-server-test
          ./server 127.0.0.1:9050 &
          cd ..
          go test -v ./...

      - name: Generate code coverage
        if: matrix.os == 'ubuntu-22.04' && matrix.go == '1.19'
        run: go test -race -v -count=1 -coverprofile=coverage.out ./...

      - name: Upload Test Coverage
        if: matrix.os == 'ubuntu-22.04' && matrix.go == '1.19'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: chatterino-api-${{ matrix.go }}-${{ matrix.os }}
          path: build/chatterino-api
